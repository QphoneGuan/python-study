# this file records the test of fishC.com

# 1st class
\n表示换行符,等同于'''a b c'''
\表示对字符进行转义，例如'I \'love\' fishC.com' == 'I "love" fishC.com'（''和""配合使用也可以）
5+8和print(5+8),前者输出值和类型，而后者只输出值

# 2nd-3rd class
查询内置函数(BIF),在IDLE中输入dir(__builtins__)
python的使用中最重要的是缩进
python中不能以数字开头作为变量名
\\这个可以用来转义\,我们还可以使用name = r'abc\\' 等同于直接输入 'abc\\',name = r'C:\now'等同于'C:\\now'

# 4th class
使用while循环语句时，当判定条件为字符串或者数值等（非布尔运算，例如while 'C':）默认条件为真，只有当条件为False，None，0，[]，{}，()，''，""时默认为假
在python3中，一行可以书写多个语句，只需要用分号（;）隔开即可。(分行显示)
在python3中，一行语句也可以分多行书写，只需要在末尾加上\，或者整个语句用（）括起来
range反向排列用法↓：
number = int(input('请输入一个整数：'))
for i in range(number,1,-1):
    print(' '*i + '*'*i)
可以利用print()方法加个换行符，利用print('apple',end = '')不加换行符，利用print('apple',end = ' ')末尾用空格代替换行

# 5th class
布尔类型中的True和False可以用1和0来代替
int()函数在取整时是向下取整，例如int(9.99)=9，可以利用isinstance(object,type)来判定指定的对象（object）的类型和type是否一致，例如isinstance('apple',float)返回的结果就是False

python3源码文件默认使用utf-8编码（支持中文），因此可以用中文作为变量名，例如苹果 = 'i love you'
type(input('请输入数字：'))总是<class'str'>，尽管你输入的是数字。
字符串（str）类型判定方法：str.isalnum()数字字母;str.isalpha()字母;str.isdigit()数字;str.islower()全是小写;str.isupper()全是大写;
str.istitle()单词首字母大写剩下小写;object.isspace()全是空格;(注意：只能对字符串做这个操作)

# 6th class
注意：在幂运算中，幂运算操作符优先级比其左边高，比其右边低。2**2**32会使电脑崩溃，但是(2**2)**32不会
逻辑操作符中：not > and > or
not 1 or 0 and 1 or 3 and 4 or 5 and 6 or 7 and 8 and 9 == (not 1) or (0 and 1) or (3 and 4) or (5 and 6) or (7 and 8 and 9)
== 0 or 0 or 4 or 6 or 9
== 4(靠前的优先)

# 7-8th class
assert称之为断言语句，这个用法是>>>assert 条件，条件为真跳过继续，条件为假系统崩溃并出现AssertionError。assert的作用是测试程序的时候，与其让错误
条件运行到最后导致出问题，还不如加个assert判定，判定条件一定为真才让程序正常工作。
多个变量快速赋值方法(举例)：x,y,z = 1,3,5
成员资格操作符（in 和 not in）:用来判定某个元素是否在对象中，在则返回True反之返回False。举例：'a' in 'apple'返回Ture。90 in [9,90,'abc']返回True
三元操作符快速写代码：small = (x if x< y else y) if (x if x< y else y) < z else z，small = x if (x < y and x < z) else (y if y < z else z)

# 9th class
while True语句经常在游戏，操作系统，通讯服务器等使用，时刻接收客户数据，时刻保持在线
少用函数去运行可以提高运行效率，特别是循环体判定条件的时候
举个例子：用户输错密码提醒-方法1
pw = 'FishC.com'
password = str(input('请输入密码：'))
times = 3

while '*' in password:
    password = str(input('密码中不能含有“*”号！您还有3次机会！请输入密码：'))
if password != pw:
    while times > 1:

times -= 1
        password = str(input('密码输入错误！您还有' + str(times) + '次机会，请输入密码：'))
    print('您密码输入的次数太多，账户已被冻结！')
else:
    print('密码正确，进入程序……')
方法1
count = 3
password = 'FishC.com'

while count:
    passwd = input('请输入密码：')
    if passwd == password:
        print('密码正确，进入程序')
        break
    elif '*' in passwd:
        print('密码中不能含有"*"号，您还有',count,'次机会！',end = ' ')
    else:
        print('密码输入有误！您还有'，count - 1 ，'次机会！'，end = ' ')
    count -= 1
水仙花数问题：100-999中，三位数三个数位的数字分别立方再求和等于这个三位数。
for i in range(100,1000):
    sum = 0
    temp = i
    while temp:
        sum = sum + (temp % 10) **3
        temp //= 10
    if sum == i:
        print(i)
12个球（3红3黄6绿）选出8个，三种颜色球的数量匹配情况
print('red\tyellow\tgreen')
for red in range(0, 4):
    for yellow in range(0, 4):
        for green in range(2, 7):
            if red + yellow + green == 8:
                # 注意，下边不是字符串拼接，因此不用“+”哦~（\t表示插入横向制表符）
                print(red, '\t', yellow, '\t', green)

# 10-11th class
将一个列表的最后一个元素放在第一个：list1.insert(0,list1.pop())
列表切片的时候可以从末尾切，例如：list2[-3:-1]表示将倒数第三个和倒数第二个切出来
列表还可以按照布长切片，例如list2[::-3]符号表示从右向左取值，右边开始第0个元素，然后再取倒数第三个，再继续……

#12th class
列表从小到大排序（同类型）：list1.sort().从大到小排序：list1.sort(reverse = True)
列表的连续索引功能：list1[index1][index2][index3](注意前提是这个对象元素可以一直被索引)
注意赋值问题：a = [1,2] b = a a = [3] print(a)得到[3] print(b)得到[1,2](注意：非列表对象也是一样)。类似于切片[:]操作
列表推导式（列表解析）功能：>>> list1 = [(x, y) for x in range(10) for y in range(10) if x%2==0 if y%2!=0] 相当于
list1 = []
for x in range(10):
    for y in range(10):
        if x%2 == 0:
            if y%2 != 0:
                list1.append((x, y))

#13th class
列表是一个大仓库，我们可以随时往里边添加或者删除任何东西；元组是封闭的列表，一旦定义无法更改（添加，删除，修改，复制）只能count(),index(),分片[:],拼接
元组定义方式：a = 6,8,0 a = 'a','ggf','ert' a = ('a',45,'ads')

#14th class
多行字符串创建方法（非\n方法）： 
方法1  s ='''asdf
asdfasf'''
方法2  s ='asdfasdfa\
asfasdf\
asdfasdf'
方法3  s = ('asfasdf'
'asdfasdfa'
'asdfasdf')
三层单引号方法（''''''）经常当作多行注释使用
当使用[：：]方法加入负数分片时（步长只能为正），从右边数是从1开始而非0。







